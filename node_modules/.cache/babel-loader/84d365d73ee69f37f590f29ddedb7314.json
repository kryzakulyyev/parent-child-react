{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/macpro2020/Desktop/react-todo/src/App.js\";\nimport React from 'react';\nimport Button from './Button';\nimport { Component } from 'react'; // class App extends React.Component {\n//   buttonClicked(){\n//     alert('You clicked on the button!')\n//   }\n//   render(){\n//   return (\n//     <div>\n//       <h1>{this.props.appName}</h1>\n//       <Button title='Click me!' click={this.buttonClicked}/>\n//     </div>\n//   );\n//   }\n// }\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.buttonClicked = this.buttonClicked.bind(this);\n  }\n\n  randomNumber() {\n    return Math.floor(Math.random() * 255) + 1;\n  }\n\n  buttonClicked() {\n    const redColor = this.randomNumber();\n    const greenColor = this.randomNumber();\n    const blueColor = this.randomNumber();\n    const rgbColor = `rgb(${redColor},${greenColor},${blueColor})`;\n    document.getElementById('header').style.color = rgbColor;\n    document.getElementById('header').innerText = rgbColor;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"header\",\n        children: this.props.appName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Click me!\",\n        onClick: this.buttonClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/macpro2020/Desktop/react-todo/src/App.js"],"names":["React","Button","Component","App","constructor","props","buttonClicked","bind","randomNumber","Math","floor","random","redColor","greenColor","blueColor","rgbColor","document","getElementById","style","color","innerText","render","appName"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAGA,MAAMC,GAAN,SAAkBH,KAAK,CAACE,SAAxB,CAAkC;AAChCE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AACDC,EAAAA,YAAY,GAAE;AACZ,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC,CAAzC;AACD;;AAEAL,EAAAA,aAAa,GAAE;AACd,UAAMM,QAAQ,GAAG,KAAKJ,YAAL,EAAjB;AACA,UAAMK,UAAU,GAAG,KAAKL,YAAL,EAAnB;AACA,UAAMM,SAAS,GAAG,KAAKN,YAAL,EAAlB;AACA,UAAMO,QAAQ,GAAG,OAAMH,QAAS,IAAGC,UAAW,IAAGC,SAAU,GAA3D;AACAE,IAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC,CAAwCC,KAAxC,GAA8CJ,QAA9C;AACAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCG,SAAlC,GAA4CL,QAA5C;AACD;;AACDM,EAAAA,MAAM,GAAE;AACR,wBACE;AAAA,8BACE;AAAI,QAAA,EAAE,EAAC,QAAP;AAAA,kBAAiB,KAAKhB,KAAL,CAAWiB;AAA5B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,WAAd;AAA0B,QAAA,OAAO,EAAE,KAAKhB;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOC;;AAzB+B;;AA6BlC,eAAeH,GAAf","sourcesContent":["import React from 'react'\nimport Button from './Button'\nimport { Component } from 'react';\n\n// class App extends React.Component {\n//   buttonClicked(){\n//     alert('You clicked on the button!')\n//   }\n//   render(){\n//   return (\n//     <div>\n//       <h1>{this.props.appName}</h1>\n//       <Button title='Click me!' click={this.buttonClicked}/>\n//     </div>\n    \n//   );\n//   }\n// }\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.buttonClicked = this.buttonClicked.bind(this)\n  }\n  randomNumber(){\n    return Math.floor(Math.random() * 255) + 1;\n  }\n  \n   buttonClicked(){\n    const redColor = this.randomNumber();\n    const greenColor = this.randomNumber();\n    const blueColor = this.randomNumber();\n    const rgbColor= `rgb(${redColor},${greenColor},${blueColor})`; \n    document.getElementById('header').style.color=rgbColor;\n    document.getElementById('header').innerText=rgbColor;\n  }\n  render(){\n  return (\n    <div>\n      <h1 id='header'>{this.props.appName}</h1>\n      <Button title='Click me!' onClick={this.buttonClicked}/>\n    </div>\n    \n  );\n  }\n  }\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}